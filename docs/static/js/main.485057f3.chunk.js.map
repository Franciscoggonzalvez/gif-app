{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE/BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OADAC,QAAQC,IAAI,CAACJ,KAAIC,QAAOC,QAEpB,yBAAKG,UAAU,4CACX,yBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,2BAAIA,K,uBCRHO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,iDACmCS,UAAUF,GAD7C,+DAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATvB,kBAcZc,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZvB,mBAAU,CAChC6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAQ,SAGrB,CAACb,IAEGc,EDdyBK,CAAanB,GAAhCU,EAFsB,EAE5BJ,KAAcO,EAFc,EAEdA,QAGrB,OACI,oCACI,wBAAIjB,UAAU,uCAAuCI,GAEpDa,GAAW,uBAAGjB,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAGXc,EAAOF,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAW,IAAOX,EAAIlB,IACPkB,UElBXY,EAAe,WAAM,MAGM5C,mBAAS,CAAC,YAHhB,mBAGvB6C,EAHuB,KAGXC,EAHW,KAS9B,OACI,oCACI,4CAGA,kBAAC,EAAD,CAAa/C,cAAiB+C,IAC9B,6BAEA,4BAEQD,EAAWd,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACAoB,IAAKpB,EACLA,SAAWA,U,MCrBnCwB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.485057f3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n        setCategories(categ => [inputValue, ...categ])\r\n        setInputValue('')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log({id, title, url})\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6auJEK5x9jpNjFFk2luqw92as0d6vxwI`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n }","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFecthGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceIn\">{category}</h3>  \r\n         \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                images.map(img => (\r\n                    <GifGridItem\r\n                    key = {img.id} \r\n                    {...img}\r\n                    />\r\n                ))\r\n                }           \r\n            \r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //queremos que se dispare la funciÃ³n unicamente cuando cambia\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state; // el estate es {data: [], loading: true}\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samuray X', 'Dragon Ball']\r\n    const [categories, setcategories] = useState(['Pokemon'])\r\n\r\n    // const handleAdd = () => {\r\n    //     //setcategories([...categories, 'HunterXHunter']);\r\n    //     setcategories(categ => [...categ, 'HunterXHunter'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>\r\n                GifExpertApp\r\n            </h2>\r\n            <AddCategory setCategories = {setcategories}/>\r\n            <hr />\r\n           \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid \r\n                        key={category}\r\n                        category= {category} />     \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}